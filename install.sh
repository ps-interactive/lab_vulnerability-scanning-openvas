#!/usr/bin/env bash

# Default password for OpenVAS admin user
PASSWORD=pluralsight

COMPOSE=$(which docker-compose)
compose_file="docker/docker-compose.yml"

minor_version=$("$COMPOSE" version 2>/dev/null|awk -F'[, .]' '/docker-compose/{print $4}')
if (( minor_version < 29 )); then
   echo "Downgrading experience as an older version of $COMPOSE is installed ($minor_version)"
   compose_file="docker/docker-compose-2.4.yml"
fi

# Always overcommit memory (use virtual memory)
sudo sysctl vm.overcommit_memory=1
grep -q "^vm.overcommit_memory" /etc/sysctl.conf || echo "vm_overcommit_memory = 1" | sudo tee -a /etc/sysctl.conf

# Ensure all volumes are there
sudo "$COMPOSE" -f "$compose_file" create
# Start PostgreSQL in the background first
sudo "$COMPOSE" -f "$compose_file" up --detach pg-gvm
echo "PostgreSQL is running"
# Start the Greenbone framework next, which involves pre-loading feeds
# This takes a while unfortunately
sudo "$COMPOSE" -f "$compose_file" up --detach gvmd
# Enable the web interface
sudo "$COMPOSE" -f "$compose_file" up --detach gsa
echo "Web frontend should be up"

# Wait until gvmd is running, which we need to change the default passwords
while [[ $(sudo docker inspect -f '{{.State.Running}}' "gvmd" 2>/dev/null) != "true" ]]; do
    sleep 1
done
echo "gvmd ready"

# Ensure that we can create / set the admin password
while [[ $(sudo docker logs gvmd 2>/dev/null | grep -q "Modifying user password"; echo $?) -ne 0 ]]; do
    sudo "$COMPOSE" -f "$compose_file" exec -u gvmd gvmd gvmd --create-user=admin --password="$PASSWORD"
    sudo "$COMPOSE" -f "$compose_file" exec -u gvmd gvmd gvmd --user=admin --new-password="$PASSWORD"
    sleep 1
done
echo "Password set successfully - able to log in now"


sudo "$COMPOSE" -f "$compose_file" up --detach mqtt-broker
echo "MQTT should be up"

sudo "$COMPOSE" -f "$compose_file" up --detach juice-shop
echo "Juice shop should be up"
# Last, as this image still needs to be built
sudo "$COMPOSE" -f "$compose_file" up --detach
