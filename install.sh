#!/usr/bin/env bash

# # Default password for OpenVAS admin user
# PASSWORD=pluralsight

# Always overcommit memory (use virtual memory)
sudo sysctl vm.overcommit_memory=1
grep -q "^vm.overcommit_memory" /etc/sysctl.conf || echo "vm_overcommit_memory = 1" | sudo tee -a /etc/sysctl.conf

COMPOSE=$(which docker-compose)
compose_file="docker/docker-compose.yml"

# Find out which version of docker-compose is installed
minor_version=$("$COMPOSE" version 2>/dev/null|awk -F'[, .]' '/docker-compose/{print $4}')
if (( minor_version < 29 )); then
   echo "Downgrading experience as an older version of $COMPOSE is installed ($minor_version)"
   compose_file="docker/docker-compose-2.4.yml"
fi

# Ensure all volumes are there
sudo "$COMPOSE" -f "$compose_file" up --no-start
# Import data volumes
sudo "$COMPOSE" -f "$compose_file" up importer

# # Import data dumps
# for volume in "${volumes[@]}"; do
#   echo "Importing volume data into ${prefix}_${volume}_${suffix}"
#   docker run --rm -i --workdir /target/ -v "${prefix}_${volume}_${suffix}":/target:rw busybox tar --extract --gzip . -- < "${prefix}_${volume}_${suffix}.tgz"
# done

# Start everything up
sudo "$COMPOSE" -f "$compose_file" up --detach gpg-data data-objects report-formats redis-server pg-gvm gvmd gsa ospd-openvas mqtt-broker notus-scanner

# Check logs to see whether gvmd can connect to the database
while [[ $(sudo docker logs gvmd 2>/dev/null | grep -q "connected"; echo $?) -ne 0 ]]; do
    sleep 1
done

echo "Web frontend should be up"

sudo "$COMPOSE" -f "$compose_file" up --detach debian juice-shop

echo "Juice Shop should be up"

# Synch feeds
sudo "$COMPOSE" -f "$compose_file" exec gvmd greenbone-feed-sync --type cert
sudo "$COMPOSE" -f "$compose_file" exec gvmd greenbone-feed-sync --type scap
sudo "$COMPOSE" -f "$compose_file" exec gvmd greenbone-feed-sync --type gvmd_data

echo "Feeds updated"

# # Wait until gvmd is running, which we need to change the default passwords
# while [[ $(sudo docker inspect -f '{{.State.Running}}' "gvmd" 2>/dev/null) != "true" ]]; do
#     sleep 1
# done
# echo "gvmd ready"

# # Ensure that we can create / set the admin password
# while [[ $(sudo docker logs gvmd 2>/dev/null | grep -q "Modifying user password"; echo $?) -ne 0 ]]; do
#     sudo "$COMPOSE" -f "$compose_file" exec -u gvmd gvmd gvmd --create-user=admin --password="$PASSWORD"
#     sudo "$COMPOSE" -f "$compose_file" exec -u gvmd gvmd gvmd --user=admin --new-password="$PASSWORD"
#     sleep 1
# done
# echo "Password set successfully - able to log in now"


# sudo "$COMPOSE" -f "$compose_file" up --detach mqtt-broker
# echo "MQTT should be up"

# sudo "$COMPOSE" -f "$compose_file" up --detach juice-shop
# echo "Juice shop should be up"
#sudo "$COMPOSE" -f "$compose_file" build --build-arg http_proxy="$HTTP_PROXY" debian
# Last, as this image still needs to be built
# sudo "$COMPOSE" -f "$compose_file" up --detach
